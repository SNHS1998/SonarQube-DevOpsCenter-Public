name: CI/CD Pipeline for Salesforce with SonarCloud

on:
  push:
    branches:
      - 'WI-*'

jobs:
  generate_and_validate:
    runs-on: ubuntu-latest
    outputs:
      test_classes: ${{ steps.generate_package.outputs.test_classes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install Salesforce CLI
        run: npm install -g sfdx-cli

      - name: Install xmlstarlet
        run: sudo apt-get install -y xmlstarlet

      - name: Generate Package.xml for Changed Components
        id: generate_package
        run: |
          mkdir -p ./manifest
          git diff --name-only HEAD^..HEAD > all-changed-components.txt
          grep "\.cls$" all-changed-components.txt | sed 's|force-app/main/default/classes/||' > changed-components.txt
          if [ -s changed-components.txt ]; then
            echo '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>' > ./manifest/package.xml
            echo '<Package xmlns="http://soap.sforce.com/2006/04/metadata">' >> ./manifest/package.xml
            echo '  <types>' >> ./manifest/package.xml
            while read component; do
              echo "    <members>${component%.cls}</members>" >> ./manifest/package.xml
            done < changed-components.txt
            echo '    <name>ApexClass</name>' >> ./manifest/package.xml
            echo '  </types>' >> ./manifest/package.xml
            echo '  <version>53.0</version>' >> ./manifest/package.xml
            echo '</Package>' >> ./manifest/package.xml
            cat ./manifest/package.xml
            test_classes=$(xmlstarlet sel -t -v "//members" -o "," ./manifest/package.xml | sed 's/,$//')
            echo "::set-output name=test_classes::$test_classes"
          else
            echo "::set-output name=test_classes::"
          fi

      - name: Create JWT Key File
        run: echo "${{ secrets.JWT_PRIVATE_KEY }}" > assets/server.key

      - name: Authorize Dev Hub (Production)
        run: |
          sfdx auth:jwt:grant --clientid ${{ secrets.CONSUMER_KEY_PROD }} --jwtkeyfile assets/server.key --username ${{ secrets.SALESFORCE_PROD_USERNAME }} --setdefaultdevhubusername --setalias prod

      - name: Authorize Developer Org
        run: |
          sfdx auth:jwt:grant --clientid ${{ secrets.CONSUMER_KEY_DEVELOPER }} --jwtkeyfile assets/server.key --username ${{ secrets.DEVELOPER_SANDBOX_USERNAME }} --setalias developer

      - name: Debug Test Classes
        run: echo "Test classes: ${{ steps.generate_package.outputs.test_classes }}"

  validate_deployment:
    runs-on: ubuntu-latest
    needs: generate_and_validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Salesforce CLI
        run: npm install -g sfdx-cli

      - name: Validate Deployment using Manifest
        if: ${{ needs.generate_and_validate.outputs.test_classes }}
        run: |
          echo "Validating deployment using manifest..."
          sfdx force:source:deploy --checkonly --manifest ./manifest/package.xml --targetusername developer --testlevel RunSpecifiedTests --runtests ${{ needs.generate_and_validate.outputs.test_classes }}
