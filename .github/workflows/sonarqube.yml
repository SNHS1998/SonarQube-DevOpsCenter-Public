name: CI Workflow

on:
  push:
    branches:
      - 'WI-*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate Package.xml for Changed Components
        run: |
          mkdir -p ./manifest
          git diff --name-only HEAD^..HEAD > all-changed-components.txt
          grep "\.cls$" all-changed-components.txt | sed 's|force-app/main/default/classes/||' > changed-components.txt
          
          if [ -s changed-components.txt ]; then
            echo '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>' > ./manifest/package.xml
            echo '<Package xmlns="http://soap.sforce.com/2006/04/metadata">' >> ./manifest/package.xml
            echo '  <types>' >> ./manifest/package.xml
            while read component; do
              echo "    <members>${component%.cls}</members>" >> ./manifest/package.xml
            done < changed-components.txt
            echo '    <name>ApexClass</name>' >> ./manifest/package.xml
            echo '  </types>' >> ./manifest/package.xml
            echo '  <version>53.0</version>' >> ./manifest/package.xml
            echo '</Package>' >> ./manifest/package.xml
            cat ./manifest/package.xml  # Debug output: Check content of package.xml
            
            # Extract test_classes directly for use in validation step
            test_classes=$(xmlstarlet sel -t -m "//types[name='ApexClass']/members" -v "." -n ./manifest/package.xml | paste -sd "," -)
            
            echo "DEBUG: Test classes found: $test_classes"  # Debug output to verify
            echo "::set-output name=test_classes::$test_classes"  # Set the test_classes as output
          else
            echo "DEBUG: No Apex classes found."  # Debug output if no classes found
            echo "::set-output name=test_classes::"  # Set empty output if no classes found
          fi
        shell: /usr/bin/bash -e {0}
        id: generate_and_validate
        continue-on-error: true

      - name: Validate Test Classes
        run: |
          if [ -n "${{ steps.generate_and_validate.outputs.test_classes }}" ]; then
            echo "Running tests for classes: ${{ steps.generate_and_validate.outputs.test_classes }}"
            # Replace with your actual test validation commands
            # Example: sfdx force:apex:test:run -n "${{ steps.generate_and_validate.outputs.test_classes }}"
          else
            echo "No test classes found, skipping validation."
          fi
        shell: /usr/bin/bash -e {0}
        if: steps.generate_and_validate.outputs.test_classes != ''
